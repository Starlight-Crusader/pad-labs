services:
  pg-1:
    container_name: postgres_1
    image: bitnami/postgresql-repmgr:14.9.0
    ports:
      - "5432:5432"
    volumes:
      - pg_1_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminapass
      - POSTGRESQL_USERNAME=auser
      - POSTGRESQL_PASSWORD=apass
      - POSTGRESQL_DATABASE=adb
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-1
      - REPMGR_PRIMARY_PORT=5432
      - REPMGR_PARTNER_NODES=pg-1,pg-2,pg-3:5432
      - REPMGR_NODE_NAME=pg-1
      - REPMGR_NODE_NETWORK_NAME=pg-1
      - REPMGR_PORT_NUMBER=5432
      - REPMGR_CONNECT_TIMEOUT=1
      - REPMGR_RECONNECT_ATTEMPTS=2
      - REPMGR_RECONNECT_INTERVAL=1
      - REPMGR_MASTER_RESPONSE_TIMEOUT=5
    restart: unless-stopped
    networks:
      - pad-network

  pg-2:
    container_name: postgres_2
    image: bitnami/postgresql-repmgr:14.9.0
    ports:
      - "5433:5432"
    volumes:
      - pg_2_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminapass
      - POSTGRESQL_USERNAME=auser
      - POSTGRESQL_PASSWORD=apass
      - POSTGRESQL_DATABASE=adb
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-1
      - REPMGR_PRIMARY_PORT=5432
      - REPMGR_PARTNER_NODES=pg-1,pg-2,pg-3:5432
      - REPMGR_NODE_NAME=pg-2
      - REPMGR_NODE_NETWORK_NAME=pg-2
      - REPMGR_PORT_NUMBER=5432
      - REPMGR_CONNECT_TIMEOUT=1
      - REPMGR_RECONNECT_ATTEMPTS=2
      - REPMGR_RECONNECT_INTERVAL=1
      - REPMGR_MASTER_RESPONSE_TIMEOUT=5
    restart: unless-stopped
    networks:
      - pad-network

  pg-3:
    container_name: postgres_3
    image: bitnami/postgresql-repmgr:14.9.0
    ports:
      - "5434:5432"
    volumes:
      - pg_3_data:/bitnami/postgresql
    environment:
      - POSTGRESQL_POSTGRES_PASSWORD=adminapass
      - POSTGRESQL_USERNAME=auser
      - POSTGRESQL_PASSWORD=apass
      - POSTGRESQL_DATABASE=adb
      - REPMGR_PASSWORD=repmgrpassword
      - REPMGR_PRIMARY_HOST=pg-1
      - REPMGR_PRIMARY_PORT=5432
      - REPMGR_PARTNER_NODES=pg-1,pg-2,pg-3:5432
      - REPMGR_NODE_NAME=pg-3
      - REPMGR_NODE_NETWORK_NAME=pg-3
      - REPMGR_PORT_NUMBER=5432
      - REPMGR_CONNECT_TIMEOUT=1
      - REPMGR_RECONNECT_ATTEMPTS=2
      - REPMGR_RECONNECT_INTERVAL=1
      - REPMGR_MASTER_RESPONSE_TIMEOUT=5
    restart: unless-stopped
    networks:
      - pad-network

  postgres-b:
    image: postgres:latest
    container_name: postgres-b
    volumes:
      - postgres-data-b:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: service_b_db
      POSTGRES_USER: service_b_user
      POSTGRES_PASSWORD: service_b_password
    ports:
      - 5435:5432
    networks:
      - pad-network

  migration-node:
    build: ./migration_node
    container_name: migration-node
    environment:
      - DATABASE_URL_DB1=postgres://auser:apass@pg-1:5432/adb
      - DATABASE_URL_DB2=postgres://auser:apass@pg-2:5432/adb
      - DATABASE_URL_DB3=postgres://auser:apass@pg-3:5432/adb
    volumes:
      - ./migration_node:/app
    entrypoint: /app/entrypoint.sh
    depends_on:
      - pg-1
      - pg-2
      - pg-3
    networks:
      - pad-network

  service-a-1:
    container_name: service-a-1
    build:
      context: ./sA
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sA:/app
    environment:
      - DJANGO_SETTINGS_MODULE=sA.settings
      - DATABASE_URL_DB1=postgres://habrpguser:pgpwd4habr@pg-1:5432/habrdb
      - DATABASE_URL_DB2=postgres://habrpguser:pgpwd4habr@pg-2:5432/habrdb
      - DATABASE_URL_DB3=postgres://habrpguser:pgpwd4habr@pg-3:5432/habrdb
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - SERVICE_TYPE=A
      - SD_HOST=service-discovery
      - SD_PORT=50051
      - PORT=8000
      - SLEEP_DURATION_S=10
      - LOGGING=1
      - RUN_MIGRATIONS=false
      - ROOT_PASSWORD=SambubU
      - SECRET_KEY=chipichipichapachapa
    ports:
      - "8000:8000"
    depends_on:
      - logstash
      - service-discovery
    networks:
      - pad-network

  service-a-2:
    container_name: service-a-2
    build:
      context: ./sA
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sA:/app
    environment:
      - DJANGO_SETTINGS_MODULE=sA.settings
      - DATABASE_URL_DB1=postgres://habrpguser:pgpwd4habr@pg-1:5432/habrdb
      - DATABASE_URL_DB2=postgres://habrpguser:pgpwd4habr@pg-2:5432/habrdb
      - DATABASE_URL_DB3=postgres://habrpguser:pgpwd4habr@pg-3:5432/habrdb
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - SERVICE_TYPE=A
      - SD_HOST=service-discovery
      - SD_PORT=50051
      - PORT=8001
      - SLEEP_DURATION_S=10
      - LOGGING=1
      - RUN_MIGRATIONS=false
      - ROOT_PASSWORD=SambubU
      - SECRET_KEY=chipichipichapachapa
    ports:
      - "8001:8000"
    depends_on:
      - logstash
      - service-discovery
    networks:
      - pad-network

  service-a-3:
    container_name: service-a-3
    build:
      context: ./sA
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sA:/app
    environment:
      - DJANGO_SETTINGS_MODULE=sA.settings
      - DATABASE_URL_DB1=postgres://habrpguser:pgpwd4habr@pg-1:5432/habrdb
      - DATABASE_URL_DB2=postgres://habrpguser:pgpwd4habr@pg-2:5432/habrdb
      - DATABASE_URL_DB3=postgres://habrpguser:pgpwd4habr@pg-3:5432/habrdb
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - SERVICE_TYPE=A
      - SD_HOST=service-discovery
      - SD_PORT=50051
      - PORT=8002
      - SLEEP_DURATION_S=10
      - LOGGING=1
      - RUN_MIGRATIONS=false
      - ROOT_PASSWORD=SambubU
      - SECRET_KEY=chipichipichapachapa
    ports:
      - "8002:8000"
    depends_on:
      - logstash
      - service-discovery
    networks:
      - pad-network

  service-b-1:
    container_name: service-b-1
    build:
      context: ./sB
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sB:/app
    depends_on:
      - logstash
      - service-discovery
    environment:
      - DJANGO_SETTINGS_MODULE=sB.settings
      - DATABASE_URL=postgres://service_b_user:service_b_password@postgres-b:5432/service_b_db
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - SERVICE_TYPE=B
      - SD_HOST=service-discovery
      - SD_PORT=50051
      - PORT=8003
      - LOGGING=1
      - RUN_MIGRATIONS=true
      - ROOT_PASSWORD=SambubU
    ports:
      - "8003:8000"
    networks:
      - pad-network

  service-b-2:
    container_name: service-b-2
    build:
      context: ./sB
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sB:/app
    depends_on:
      - logstash
      - service-discovery
    environment:
      - DJANGO_SETTINGS_MODULE=sB.settings
      - DATABASE_URL=postgres://service_b_user:service_b_password@postgres-b:5432/service_b_db
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - SERVICE_TYPE=B
      - SD_HOST=service-discovery
      - SD_PORT=50051
      - PORT=8004
      - LOGGING=1
      - RUN_MIGRATIONS=false
      - ROOT_PASSWORD=SambubU
    ports:
      - "8004:8000"
    networks:
      - pad-network

  service-b-3:
    container_name: service-b-3
    build:
      context: ./sB
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sB:/app
    depends_on:
      - logstash
      - service-discovery
    environment:
      - DJANGO_SETTINGS_MODULE=sB.settings
      - DATABASE_URL=postgres://service_b_user:service_b_password@postgres-b:5432/service_b_db
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - SERVICE_TYPE=B
      - SD_HOST=service-discovery
      - SD_PORT=50051
      - PORT=8005
      - LOGGING=1
      - RUN_MIGRATIONS=false
      - ROOT_PASSWORD=SambubU
    ports:
      - "8005:8000"
    networks:
      - pad-network

  sm-redis:
    image: redis:latest
    container_name: sm-redis
    ports:
      - "6479:6379"
    command: redis-server --save "" --appendonly no
    networks:
      - pad-network

  api-gateway:
    container_name: api-gateway
    build:
      context: ./api-gateway
    environment:
      - PORT=8080
      - SM_REDIS_URL=redis://sm-redis:6379
      - SERV_REST_PORT=8000
      - REQUEST_TIMEOUT_MS=9000
      - MAX_TASKS_PER_SERVICE=1
      - CRTICAL_LOAD_PER_MIN=5
      - MAX_RETRIES=3
      - MAX_REDIRECTS=3
      - LOGGING=1
      - ROOT_PASS=SambubU
    ports:
      - "8080:8080"
    depends_on:
      - service-discovery
      - logstash
    networks:
      - pad-network

  service-discovery:
    container_name: service-discovery
    build:
      context: ./service-discovery
    environment:
      - PORT=50051
      - SM_REDIS_URL=redis://sm-redis:6379
      - SERV_REST_PORT=8000
      - LOGGING=1
    ports:
      - "50051:50051"
    depends_on:
      - sm-redis
      - filebeat
    networks:
      - pad-network
    volumes:
      - service-discovery-data:/app/logs
  
  ud-redis-node-1:
    image: bitnami/redis-cluster:latest
    container_name: ud-redis-node-1
    environment:
      - REDIS_NODES=ud-redis-node-1,ud-redis-node-2,ud-redis-node-3,ud-redis-node-4,ud-redis-node-5,ud-redis-node-6
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6379:6379"
    networks:
      - pad-network
    tmpfs:
      - /bitnami/redis

  ud-redis-node-2:
    image: bitnami/redis-cluster:latest
    container_name: ud-redis-node-2
    environment:
      - REDIS_NODES=ud-redis-node-1,ud-redis-node-2,ud-redis-node-3,ud-redis-node-4,ud-redis-node-5,ud-redis-node-6
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6380:6379"
    networks:
      - pad-network
    tmpfs:
      - /bitnami/redis

  ud-redis-node-3:
    image: bitnami/redis-cluster:latest
    container_name: ud-redis-node-3
    environment:
      - REDIS_NODES=ud-redis-node-1,ud-redis-node-2,ud-redis-node-3,ud-redis-node-4,ud-redis-node-5,ud-redis-node-6
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6381:6379"
    networks:
      - pad-network
    tmpfs:
      - /bitnami/redis

  ud-redis-node-4:
    image: bitnami/redis-cluster:latest
    container_name: ud-redis-node-4
    environment:
      - REDIS_NODES=ud-redis-node-1,ud-redis-node-2,ud-redis-node-3,ud-redis-node-4,ud-redis-node-5,ud-redis-node-6
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6382:6379"
    networks:
      - pad-network
    tmpfs:
      - /bitnami/redis

  ud-redis-node-5:
    image: bitnami/redis-cluster:latest
    container_name: ud-redis-node-5
    environment:
      - REDIS_NODES=ud-redis-node-1,ud-redis-node-2,ud-redis-node-3,ud-redis-node-4,ud-redis-node-5,ud-redis-node-6
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6383:6379"
    networks:
      - pad-network
    tmpfs:
      - /bitnami/redis

  ud-redis-node-6:
    image: bitnami/redis-cluster:latest
    container_name: ud-redis-node-6
    environment:
      - REDIS_NODES=ud-redis-node-1,ud-redis-node-2,ud-redis-node-3,ud-redis-node-4,ud-redis-node-5,ud-redis-node-6
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - "6384:6379"
    networks:
      - pad-network
    tmpfs:
      - /bitnami/redis

  redis-cluster-init-node:
    container_name: redis-cluster-init-node
    build:
      context: ./redis_cluster
      dockerfile: Dockerfile
    depends_on:
      - ud-redis-node-1
      - ud-redis-node-2
      - ud-redis-node-3
      - ud-redis-node-4
      - ud-redis-node-5
      - ud-redis-node-6
    networks:
      - pad-network
  
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - pad-network
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data

  logstash:
    image: docker.elastic.co/logstash/logstash:7.14.0
    container_name: logstash
    ports:
      - "5000:5000"
      - "9600:9600"
    networks:
      - pad-network
    volumes:
      - ./elk_config/logstash/pipeline:/usr/share/logstash/pipeline
    depends_on:
      - elasticsearch

  kibana:
    image: docker.elastic.co/kibana/kibana:7.14.0
    container_name: kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    networks:
      - pad-network
    depends_on:
      - elasticsearch

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.15.3
    container_name: filebeat
    command: ["filebeat", "-e", "-strict.perms=false"]
    networks:
      - pad-network
    volumes:
      - ./elk_config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml
      - service-discovery-data:/usr/share/filebeat/data
    depends_on:
      - logstash

volumes:
  elasticsearch-data:
  service-discovery-data:
  pg_1_data:
  pg_2_data:
  pg_3_data:
  postgres-data-b:

networks:
  pad-network:
    driver: bridge