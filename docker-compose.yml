version: '3.8'

services:
  postgres_a:
    image: postgres:14
    container_name: postgres_a
    volumes:
      - postgres_data_a:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: service_a_db
      POSTGRES_USER: service_a_user
      POSTGRES_PASSWORD: service_a_password
    ports:
      - "5432:5432"

  postgres_b:
    image: postgres:14
    container_name: postgres_b
    volumes:
      - postgres_data_b:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: service_b_db
      POSTGRES_USER: service_b_user
      POSTGRES_PASSWORD: service_b_password
    ports:
      - "5433:5432"

  channels_redis:
    image: redis:latest
    container_name: channels_redis
    ports:
      - "6379:6379"

  service-a:
    container_name: service-a
    build:
      context: ./sA
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sA:/app
    depends_on:
      - postgres_a
      # - api-gateway
    environment:
      - DJANGO_SETTINGS_MODULE=sA.settings
      - DATABASE_URL=postgres://service_a_user:service_a_password@postgres_a:5432/service_a_db
      - B_BASE_URL=http://service-a:8001/
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - VIEW_LEVEL_TIMEOUT_S=2
      # Secrets go in docker-compose.secrets.yml
    ports:
      - "8000:8000"

  service-b:
    container_name: service-b
    build:
      context: ./sB
    entrypoint: ["./entrypoint.sh"]
    volumes:
      - ./sB:/app
    depends_on:
      - postgres_b
      - channels_redis
      # - api-gateway
    environment:
      - DJANGO_SETTINGS_MODULE=sB.settings
      - DATABASE_URL=postgres://service_b_user:service_b_password@postgres_b:5432/service_b_db
      - A_BASE_URL=http://service-a:8000/
      - API_GATEWAY_BASE_URL=http://api-gateway:8080/
      - VIEW_LEVEL_TIMEOUT_S=2
      - CHANNELS_REDIS_HOST=channels_redis
      - CHANNELS_REDIS_PORT=6379
      # Secrets go in docker-compose.secrets.yml
    ports:
      - "8001:8000"

  # api-gateway:
  #   build:
  #     context: ./api-gateway
  #   volumes:
  #     - ./api-gateway:/app
  #   environment:
  #     - REDIS_HOST=redis
  #     - REDIS_PORT=6379
  #     # Secrets go in docker-compose.secrets.yml
  #   depends_on:
  #     - redis
  #   ports:
  #     - "8080:8080"

volumes:
  postgres_data_a:
  postgres_data_b: